{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// const url = \"http://localhost:8001/transactions\";\n// function AddTransactionForm() {\n//   //  lets try this form \n//   const [date, setDate] = useState('')\n//   const [description, setDescription] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [amount, setAmount] = useState('')\n//   // POST\n//   const postTransaction = () => {\n//     let data = {date, description,category,amount}\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         'Accept': \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( data),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//            console.warn(data)\n//       });\n//   };\n//   const handleSubmit = (e)=>{\n//     e.preventDefault()\n//     postTransaction()\n//   }\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit}>\n//         <div className=\"inline fields\">\n//           <input\n//             type=\"date\"\n//             name=\"date\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             value={description}\n//             placeholder=\"Description\"\n//             onChange={(e) => setDescription(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"category\"\n//             value={category}\n//             placeholder=\"Category\"\n//             onChange={(e) => setCategory(e.target.value)}\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             value={amount}\n//             placeholder=\"Amount\"\n//             step=\"0.01\"\n//             onChange={(e) => setAmount(e.target.value)}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default AddTransactionForm;\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm({\n  transactions,\n  setTransactions\n}) {\n  _s();\n\n  //const [transactionData, setTransactionData] = useState([]);//\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  });\n\n  function handleOnChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(r => r.json()).then(data => {\n      const newTransactionData = [...transactions, data];\n      setTransactions(newTransactionData);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"4cCi3zxBqH9+aGsYSxdD7JV7fAE=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm; // import React, { useState } from \"react\";\n// const url = \"http://localhost:8001/transactions\";\n// function AddTransactionForm({ transactions, setTransactions }) {\n//   const [addTransactionForm, setAddTransactionForm] = useState(\n//     {\n//   //   // date: date,    this doent work the page goes blank\n//   //   // description: description,\n//   //   // category: category,\n//   //   // amount: amount,\n//   //   // date,  this doesnt work also\n//   //   // description,\n//   //   // category,\n//   //   // amount,\n//     date: \"\",\n//     description: \"\",\n//     category: \"\",\n//     amount: 0,\n//   });\n//   // onchange\n//   const handleChange = (e) => {\n//     let name = e.target.name;\n//     let value = e.target.value;\n//     setAddTransactionForm({...addTransactionForm, [name]: value });\n//   };\n//   // POST\n//   const postTransaction = () => {\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });\n//   };\n//   const handleSubmit = (e)=>{\n//     e.preventDefault()\n//     //     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });\n// //    postTransaction()\n//   }\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit} >\n//         <div className=\"inline fields\">\n//           <input type=\"date\" name=\"date\" onChange={handleChange} />\n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             placeholder=\"Description\"\n//             onChange={handleChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"category\"\n//             placeholder=\"Category\"\n//             onChange={handleChange}\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             placeholder=\"Amount\"\n//             step=\"0.01\"\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","transactions","setTransactions","formData","setFormData","date","description","category","amount","handleOnChange","e","name","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","data","newTransactionData"],"mappings":"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":["// import React, { useState } from \"react\";\n\n\n// const url = \"http://localhost:8001/transactions\";\n// function AddTransactionForm() {\n//   //  lets try this form \n//   const [date, setDate] = useState('')\n//   const [description, setDescription] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [amount, setAmount] = useState('')\n\n//   // POST\n//   const postTransaction = () => {\n//     let data = {date, description,category,amount}\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         'Accept': \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( data),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//            console.warn(data)\n//       });\n//   };\n\n//   const handleSubmit = (e)=>{\n//     e.preventDefault()\n//     postTransaction()\n//   }\n\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit}>\n//         <div className=\"inline fields\">\n//           <input\n//             type=\"date\"\n//             name=\"date\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             value={description}\n//             placeholder=\"Description\"\n//             onChange={(e) => setDescription(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"category\"\n//             value={category}\n//             placeholder=\"Category\"\n//             onChange={(e) => setCategory(e.target.value)}\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             value={amount}\n//             placeholder=\"Amount\"\n//             step=\"0.01\"\n//             onChange={(e) => setAmount(e.target.value)}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AddTransactionForm;\n\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm({ transactions, setTransactions}) {\n  //const [transactionData, setTransactionData] = useState([]);//\n  const [formData, setFormData] = useState({\n  date: \"\",\n  description: \"\",\n  category: \"\",\n  amount: 0,\n})\n\n  function handleOnChange(e) {\n    let name = e.target.name\n    let value = e.target.value\n    setFormData ({  \n      ...formData, [name]: value\n    }); \n  }\n\n  function handleSubmit(e){\n    e.preventDefault()\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData)\n    })\n      .then((r) => r.json())\n      .then((data) => {\n      const newTransactionData = [...transactions, data] \n      setTransactions(newTransactionData)\n      })\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input \n          type=\"date\" \n          name=\"date\" \n          onChange={handleOnChange}\n          />\n          <input \n          type=\"text\" \n          name=\"description\" \n          placeholder=\"Description\" \n          onChange={handleOnChange}\n          />\n          <input \n          type=\"text\" \n          name=\"category\" \n          placeholder=\"Category\" \n          onChange={handleOnChange}\n          />\n          <input \n          type=\"number\" \n          name=\"amount\" \n          placeholder=\"Amount\" \n          step=\"0.01\" \n          onChange={handleOnChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n\n\n// import React, { useState } from \"react\";\n\n\n// const url = \"http://localhost:8001/transactions\";\n// function AddTransactionForm({ transactions, setTransactions }) {\n//   const [addTransactionForm, setAddTransactionForm] = useState(\n//     {\n//   //   // date: date,    this doent work the page goes blank\n//   //   // description: description,\n//   //   // category: category,\n//   //   // amount: amount,\n\n//   //   // date,  this doesnt work also\n//   //   // description,\n//   //   // category,\n//   //   // amount,\n\n//     date: \"\",\n//     description: \"\",\n//     category: \"\",\n//     amount: 0,\n//   });\n\n//   // onchange\n//   const handleChange = (e) => {\n//     let name = e.target.name;\n//     let value = e.target.value;\n//     setAddTransactionForm({...addTransactionForm, [name]: value });\n//   };\n\n//   // POST\n//   const postTransaction = () => {\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });\n//   };\n\n//   const handleSubmit = (e)=>{\n//     e.preventDefault()\n//     //     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });\n// //    postTransaction()\n//   }\n\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit} >\n//         <div className=\"inline fields\">\n//           <input type=\"date\" name=\"date\" onChange={handleChange} />\n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             placeholder=\"Description\"\n//             onChange={handleChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"category\"\n//             placeholder=\"Category\"\n//             onChange={handleChange}\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             placeholder=\"Amount\"\n//             step=\"0.01\"\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}