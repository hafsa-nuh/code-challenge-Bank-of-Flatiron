{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Development/phase2-code-chanllenge/code-challenge-Bank-of-Flatiron/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // const url = \"http://localhost:8001/transactions\";\n\nfunction AddTransactionForm({\n  transactions,\n  setTransactions,\n  url\n}) {\n  _s();\n\n  console.log(transactions); // leaving the object values blank\n\n  const [addTransactionForm, setAddTransactionForm] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  }); // onchange\n\n  const handleChange = e => {\n    // spreading and adding new object\n    setAddTransactionForm({ ...addTransactionForm,\n      // my error was not targeting the name\n      [e.target.name]: e.target.value\n    });\n  }; // POST method inside the handleSubmit function\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(addTransactionForm)\n    }).then(respon => respon.json()).then(data => {\n      // console.log(data + \"y isnt console logging\")\n      const newData = [...transactions, data]; // console.log(\"hafsa\"+newData)\n\n      setTransactions(newData);\n    });\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\" // value= {description}\n          ,\n          placeholder: \"Description\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"dZKS6uBJFdDy3wHhd5BFEtj0vTs=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/Users/admin/Development/phase2-code-chanllenge/code-challenge-Bank-of-Flatiron/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","transactions","setTransactions","url","console","log","addTransactionForm","setAddTransactionForm","date","description","category","amount","handleChange","e","target","name","value","handleSubmit","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","respon","json","data","newData","reset"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// const url = \"http://localhost:8001/transactions\";\nfunction AddTransactionForm({ transactions, setTransactions, url }) {\n  console.log(transactions);\n  // leaving the object values blank\n  const [addTransactionForm, setAddTransactionForm] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\",\n  });\n\n  // onchange\n  const handleChange = (e) => {\n    // spreading and adding new object\n    setAddTransactionForm({\n      ...addTransactionForm,\n      // my error was not targeting the name\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // POST method inside the handleSubmit function\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(addTransactionForm),\n    })\n    .then((respon) => respon.json())\n    .then((data) => {\n      // console.log(data + \"y isnt console logging\")\n      const newData = [...transactions, data];\n      // console.log(\"hafsa\"+newData)\n      setTransactions(newData);\n    });\n    e.target.reset()\n  };\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" onChange={handleChange} />\n          <input\n            type=\"text\"\n            name=\"description\"\n            // value= {description}\n            placeholder=\"Description\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            step=\"0.01\"\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\" >\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}