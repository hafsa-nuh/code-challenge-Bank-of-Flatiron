{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// const url = \"http://localhost:8001/transactions\";\n// function AddTransactionForm() {\n//   //  lets try this form \n//   const [date, setDate] = useState('')\n//   const [description, setDescription] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [amount, setAmount] = useState('')\n//   // POST\n//   const postTransaction = () => {\n//     let data = {date, description,category,amount}\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         'Accept': \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( data),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//            console.warn(data)\n//       });\n//   };\n//   const handleSubmit = (e)=>{\n//     e.preventDefault()\n//     postTransaction()\n//   }\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit}>\n//         <div className=\"inline fields\">\n//           <input\n//             type=\"date\"\n//             name=\"date\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             value={description}\n//             placeholder=\"Description\"\n//             onChange={(e) => setDescription(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"category\"\n//             value={category}\n//             placeholder=\"Category\"\n//             onChange={(e) => setCategory(e.target.value)}\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             value={amount}\n//             placeholder=\"Amount\"\n//             step=\"0.01\"\n//             onChange={(e) => setAmount(e.target.value)}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default AddTransactionForm;\n// import React, { useState } from \"react\";\n// function AddTransactionForm({ transactions, setTransactions}) {\n//   //const [transactionData, setTransactionData] = useState([]);//\n//   const [formData, setFormData] = useState({\n//   date: \"\",\n//   description: \"\",\n//   category: \"\",\n//   amount: 0,\n// })\n//   function handleOnChange(e) {\n//     let name = e.target.name\n//     let value = e.target.value\n//     setFormData ({  \n//       ...formData, [name]: value\n//     }); \n//   }\n//   function handleSubmit(e){\n//     e.preventDefault()\n//     fetch(\"http://localhost:8001/transactions\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(formData)\n//     })\n//       .then((r) => r.json())\n//       .then((data) => {\n//       const newTransactionData = [...transactions, data] \n//       setTransactions(newTransactionData)\n//       })\n//   }\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit}>\n//         <div className=\"inline fields\">\n//           <input \n//           type=\"date\" \n//           name=\"date\" \n//           onChange={handleOnChange}\n//           />\n//           <input \n//           type=\"text\" \n//           name=\"description\" \n//           placeholder=\"Description\" \n//           onChange={handleOnChange}\n//           />\n//           <input \n//           type=\"text\" \n//           name=\"category\" \n//           placeholder=\"Category\" \n//           onChange={handleOnChange}\n//           />\n//           <input \n//           type=\"number\" \n//           name=\"amount\" \n//           placeholder=\"Amount\" \n//           step=\"0.01\" \n//           onChange={handleOnChange}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default AddTransactionForm;\nimport React, { useState } from \"react\";\nconst url = \"http://localhost:8001/transactions\";\n\nfunction AddTransactionForm({\n  transactions,\n  setTransactions\n}) {\n  _s();\n\n  const [addTransactionForm, setAddTransactionForm] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  }); // onchange\n\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setAddTransactionForm({ ...addTransactionForm,\n      [name]: value\n    });\n  }; // POST\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(addTransactionForm)\n    }).then(respon => respon.json()).then(data => {\n      // console.log(data + \"y isnt console logging\")\n      const newData = [...transactions, data]; // console.log(\"hafsa\"+newData)\n\n      setTransactions(newData);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"g8iGaklcb9xjU/NKgIoNE5niAu0=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useState","url","AddTransactionForm","transactions","setTransactions","addTransactionForm","setAddTransactionForm","date","description","category","amount","handleChange","e","name","target","value","handleSubmit","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","respon","json","data","newData"],"mappings":";;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,GAAG,GAAG,oCAAZ;;AACA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAA5B,EAA+D;AAAA;;AAE7D,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC;AAC3DO,IAAAA,IAAI,EAAE,EADqD;AAE3DC,IAAAA,WAAW,EAAE,EAF8C;AAG3DC,IAAAA,QAAQ,EAAE,EAHiD;AAI3DC,IAAAA,MAAM,EAAE;AAJmD,GAAD,CAA5D,CAF6D,CAS7D;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAApB;AACA,QAAIE,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAArB;AACAT,IAAAA,qBAAqB,CAAC,EAAC,GAAGD,kBAAJ;AAAwB,OAACQ,IAAD,GAAQE;AAAhC,KAAD,CAArB;AACD,GAJD,CAV6D,CAgB7D;;;AACA,QAAMC,YAAY,GAAIJ,CAAD,IAAK;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,KAAK,CAACjB,GAAD,EAAM;AACTkB,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFA;AAMTC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgBnB,kBAAhB;AANG,KAAN,CAAL,CAQGoB,IARH,CAQSC,MAAD,IAAYA,MAAM,CAACC,IAAP,EARpB,EASGF,IATH,CASSG,IAAD,IAAU;AACd;AACA,YAAMC,OAAO,GAAG,CAAC,GAAG1B,YAAJ,EAAkByB,IAAlB,CAAhB,CAFc,CAGd;;AACAxB,MAAAA,eAAe,CAACyB,OAAD,CAAf;AACD,KAdH;AAeD,GAjBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAEb,YAApC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,QAAQ,EAAEL;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,WAAW,EAAC,aAHd;AAIE,UAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBARF,eAcE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,QAHd;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,QAAQ,EAAEA;AALZ;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAlEQT,kB;;KAAAA,kB;AAoET,eAAeA,kBAAf","sourcesContent":["// import React, { useState } from \"react\";\n\n\n// const url = \"http://localhost:8001/transactions\";\n// function AddTransactionForm() {\n//   //  lets try this form \n//   const [date, setDate] = useState('')\n//   const [description, setDescription] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [amount, setAmount] = useState('')\n\n//   // POST\n//   const postTransaction = () => {\n//     let data = {date, description,category,amount}\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         'Accept': \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( data),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//            console.warn(data)\n//       });\n//   };\n\n//   const handleSubmit = (e)=>{\n//     e.preventDefault()\n//     postTransaction()\n//   }\n\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit}>\n//         <div className=\"inline fields\">\n//           <input\n//             type=\"date\"\n//             name=\"date\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             value={description}\n//             placeholder=\"Description\"\n//             onChange={(e) => setDescription(e.target.value)}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"category\"\n//             value={category}\n//             placeholder=\"Category\"\n//             onChange={(e) => setCategory(e.target.value)}\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             value={amount}\n//             placeholder=\"Amount\"\n//             step=\"0.01\"\n//             onChange={(e) => setAmount(e.target.value)}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AddTransactionForm;\n\n\n// import React, { useState } from \"react\";\n\n// function AddTransactionForm({ transactions, setTransactions}) {\n//   //const [transactionData, setTransactionData] = useState([]);//\n//   const [formData, setFormData] = useState({\n//   date: \"\",\n//   description: \"\",\n//   category: \"\",\n//   amount: 0,\n// })\n\n//   function handleOnChange(e) {\n//     let name = e.target.name\n//     let value = e.target.value\n//     setFormData ({  \n//       ...formData, [name]: value\n//     }); \n//   }\n\n//   function handleSubmit(e){\n//     e.preventDefault()\n//     fetch(\"http://localhost:8001/transactions\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(formData)\n//     })\n//       .then((r) => r.json())\n//       .then((data) => {\n//       const newTransactionData = [...transactions, data] \n//       setTransactions(newTransactionData)\n//       })\n//   }\n\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit}>\n//         <div className=\"inline fields\">\n//           <input \n//           type=\"date\" \n//           name=\"date\" \n//           onChange={handleOnChange}\n//           />\n//           <input \n//           type=\"text\" \n//           name=\"description\" \n//           placeholder=\"Description\" \n//           onChange={handleOnChange}\n//           />\n//           <input \n//           type=\"text\" \n//           name=\"category\" \n//           placeholder=\"Category\" \n//           onChange={handleOnChange}\n//           />\n//           <input \n//           type=\"number\" \n//           name=\"amount\" \n//           placeholder=\"Amount\" \n//           step=\"0.01\" \n//           onChange={handleOnChange}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AddTransactionForm;\n\n\nimport React, { useState } from \"react\";\n\nconst url = \"http://localhost:8001/transactions\";\nfunction AddTransactionForm({ transactions, setTransactions }) {\n  \n  const [addTransactionForm, setAddTransactionForm] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0,\n  });\n\n  // onchange\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setAddTransactionForm({...addTransactionForm, [name]: value });\n  };\n\n  // POST\n  const handleSubmit = (e)=>{\n    e.preventDefault()\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify( addTransactionForm),\n    })\n      .then((respon) => respon.json())\n      .then((data) => {\n        // console.log(data + \"y isnt console logging\")\n        const newData = [...transactions, data];\n        // console.log(\"hafsa\"+newData)\n        setTransactions(newData);\n      })\n  }\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit} >\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" onChange={handleChange} />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            step=\"0.01\"\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}