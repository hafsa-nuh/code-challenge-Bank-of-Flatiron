{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// const url = \"http://localhost:8001/transactions\";\n// function AddTransactionForm({ transactions, setTransactions }) {\n//   const [addTransactionForm, setAddTransactionForm] = useState(\n//     {\n//   //   // date: date,    this doent work the page goes blank\n//   //   // description: description,\n//   //   // category: category,\n//   //   // amount: amount,\n//   //   // date,  this doesnt work also\n//   //   // description,\n//   //   // category,\n//   //   // amount,\n//     date: \"\",\n//     description: \"\",\n//     category: \"\",\n//     amount: 0,\n//   }\n//   );\n//   // onchange\n//   const handleChange = (e) => {\n//     let descrip = e.target.descrip;\n//     let value = e.target.value;\n//     setAddTransactionForm({...addTransactionForm, [descrip]: value });\n//   };\n//   // POST\n//   const postTransaction = () => {\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });\n//   };\n//   const handleSubmit = (e)=>{\n//     e.preventDefault()\n//     postTransaction()\n//   }\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit} >\n//         <div className=\"inline fields\">\n//           <input type=\"date\" name=\"date\" onChange={handleChange} />\n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             placeholder=\"Description\"\n//             onChange={handleChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"category\"\n//             placeholder=\"Category\"\n//             onChange={handleChange}\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             placeholder=\"Amount\"\n//             step=\"0.01\"\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default AddTransactionForm;\nimport React, { useState } from \"react\";\nconst url = \"http://localhost:8001/transactions\";\n\nfunction AddTransactionForm({\n  transactions,\n  setTransactions\n}) {\n  _s();\n\n  const [addTransactionForm, setAddTransactionForm] = useState({\n    //   // date: date,    this doent work the page goes blank\n    //   // description: description,\n    //   // category: category,\n    //   // amount: amount,\n    //   // date,  this doesnt work also\n    //   // description,\n    //   // category,\n    //   // amount,\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: ''\n  });\n  const {\n    data,\n    description,\n    category,\n    amount\n  } = addTransactionForm; // onchange\n\n  const handleChange = e => {\n    let descrip = e.target.descrip;\n    let value = e.target.value;\n    setAddTransactionForm({});\n    setAddTransactionForm({ ...addTransactionForm,\n      [descrip]: value\n    });\n  }; // POST\n\n\n  const postTransaction = () => {\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(addTransactionForm // {\n      //   addTransactionForm :{\n      //     date: date,\n      //     description:description,\n      //     category:category,\n      //     amount: amount\n      //   }\n      // }\n      // {...addTransactionForm,\n      // date,\n      // description,\n      // category,\n      // amount}\n      )\n    }).then(respon => respon.json()).then(data => {\n      // console.log(data + \"y isnt console logging\")\n      const newData = [...transactions, data]; // console.log(\"hafsa\"+newData)\n\n      setTransactions(newData);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    postTransaction();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\" // value={date}\n          ,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\" // value={description}\n          ,\n          placeholder: \"Description\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\" // value={category}\n          ,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\" // value={amount}\n          ,\n          step: \"0.01\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"xoVTIBTdafZQNCwFtmX96xnJMHk=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useState","url","AddTransactionForm","transactions","setTransactions","addTransactionForm","setAddTransactionForm","date","description","category","amount","data","handleChange","e","descrip","target","value","postTransaction","fetch","method","headers","Accept","body","JSON","stringify","then","respon","json","newData","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\n\n\n// const url = \"http://localhost:8001/transactions\";\n// function AddTransactionForm({ transactions, setTransactions }) {\n//   const [addTransactionForm, setAddTransactionForm] = useState(\n//     {\n//   //   // date: date,    this doent work the page goes blank\n//   //   // description: description,\n//   //   // category: category,\n//   //   // amount: amount,\n\n//   //   // date,  this doesnt work also\n//   //   // description,\n//   //   // category,\n//   //   // amount,\n\n//     date: \"\",\n//     description: \"\",\n//     category: \"\",\n//     amount: 0,\n//   }\n//   );\n\n//   // onchange\n//   const handleChange = (e) => {\n//     let descrip = e.target.descrip;\n//     let value = e.target.value;\n//     setAddTransactionForm({...addTransactionForm, [descrip]: value });\n//   };\n\n//   // POST\n//   const postTransaction = () => {\n//     fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify( addTransactionForm\n//         // {\n//         //   addTransactionForm :{\n//         //     date: date,\n//         //     description:description,\n//         //     category:category,\n//         //     amount: amount\n//         //   }\n//         // }\n//         // {...addTransactionForm,\n//         // date,\n//         // description,\n//         // category,\n//         // amount}\n//       ),\n//     })\n//       .then((respon) => respon.json())\n//       .then((data) => {\n//         // console.log(data + \"y isnt console logging\")\n//         const newData = [...transactions, data];\n//         // console.log(\"hafsa\"+newData)\n//         setTransactions(newData);\n//       });\n//   };\n\n//   const handleSubmit = (e)=>{\n//     e.preventDefault()\n//     postTransaction()\n//   }\n\n//   return (\n//     <div className=\"ui segment\">\n//       <form className=\"ui form\" onSubmit={handleSubmit} >\n//         <div className=\"inline fields\">\n//           <input type=\"date\" name=\"date\" onChange={handleChange} />\n//           <input\n//             type=\"text\"\n//             name=\"description\"\n//             placeholder=\"Description\"\n//             onChange={handleChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"category\"\n//             placeholder=\"Category\"\n//             onChange={handleChange}\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             placeholder=\"Amount\"\n//             step=\"0.01\"\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button className=\"ui button\" type=\"submit\">\n//           Add Transaction\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default AddTransactionForm;\n\nimport React, { useState } from \"react\";\n\n\nconst url = \"http://localhost:8001/transactions\";\nfunction AddTransactionForm({ transactions, setTransactions }) {\n  const [addTransactionForm, setAddTransactionForm] = useState(\n    {\n  //   // date: date,    this doent work the page goes blank\n  //   // description: description,\n  //   // category: category,\n  //   // amount: amount,\n\n  //   // date,  this doesnt work also\n  //   // description,\n  //   // category,\n  //   // amount,\n\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: '',\n  }\n  );\n  const {data,description,category,amount} = addTransactionForm\n\n  // onchange\n  const handleChange = (e) => {\n    let descrip = e.target.descrip;\n    let value = e.target.value;\n    setAddTransactionForm({})\n    setAddTransactionForm({...addTransactionForm, [descrip]: value });\n  };\n\n  // POST\n  const postTransaction = () => {\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify( addTransactionForm\n        // {\n        //   addTransactionForm :{\n        //     date: date,\n        //     description:description,\n        //     category:category,\n        //     amount: amount\n        //   }\n        // }\n        // {...addTransactionForm,\n        // date,\n        // description,\n        // category,\n        // amount}\n      ),\n    })\n      .then((respon) => respon.json())\n      .then((data) => {\n        // console.log(data + \"y isnt console logging\")\n        const newData = [...transactions, data];\n        // console.log(\"hafsa\"+newData)\n        setTransactions(newData);\n      });\n  };\n\n  const handleSubmit = (e)=>{\n    e.preventDefault()\n    postTransaction()\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit} >\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" \n          // value={date}\n           onChange={handleChange} />\n          <input\n            type=\"text\"\n            name=\"description\"\n            // value={description}\n            placeholder=\"Description\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n            // value={category}\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            // value={amount}\n            step=\"0.01\"\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"]},"metadata":{},"sourceType":"module"}