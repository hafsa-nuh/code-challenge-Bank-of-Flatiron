{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nconst url = \"http://localhost:8001/transactions\";\n\nfunction AddTransactionForm({\n  transactions,\n  setTransactions\n}) {\n  _s();\n\n  const [addTransactionForm, setAddTransactionForm] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0\n  }); // onchange\n\n  const handleChange = e => {\n    let descrip = e.target.descrip;\n    let value = e.target.value;\n    setAddTransactionForm({ ...addTransactionForm,\n      [descrip]: value\n    });\n  };\n\n  const postTransaction = () => {\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(addTransactionForm)\n    }).then(respon => respon.json()).then(data => {\n      console.log(data);\n      const newData = [...transactions, data];\n      setTransactions(newData);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    postTransaction();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"g8iGaklcb9xjU/NKgIoNE5niAu0=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useState","url","AddTransactionForm","transactions","setTransactions","addTransactionForm","setAddTransactionForm","date","description","category","amount","handleChange","e","descrip","target","value","postTransaction","fetch","method","headers","body","JSON","stringify","then","respon","json","data","console","log","newData","handleSubmit","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,MAAMC,GAAG,GAAG,oCAAZ;;AACA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAA5B,EAA+D;AAAA;;AAC7D,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC;AAC3DO,IAAAA,IAAI,EAAE,EADqD;AAE3DC,IAAAA,WAAW,EAAE,EAF8C;AAG3DC,IAAAA,QAAQ,EAAE,EAHiD;AAI3DC,IAAAA,MAAM,EAAE;AAJmD,GAAD,CAA5D,CAD6D,CAQ7D;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASD,OAAvB;AACA,QAAIE,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAArB;AACAT,IAAAA,qBAAqB,CAAC,EAAC,GAAGD,kBAAJ;AAAwB,OAACQ,OAAD,GAAWE;AAAnC,KAAD,CAArB;AACD,GAJD;;AAMA,QAAMC,eAAe,GAAG,MAAM;AAC5BC,IAAAA,KAAK,CAAChB,GAAD,EAAM;AACTiB,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFA;AAKTC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,kBAAf;AALG,KAAN,CAAL,CAOGkB,IAPH,CAOSC,MAAD,IAAYA,MAAM,CAACC,IAAP,EAPpB,EAQGF,IARH,CAQSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,OAAO,GAAG,CAAC,GAAG1B,YAAJ,EAAkBuB,IAAlB,CAAhB;AACAtB,MAAAA,eAAe,CAACyB,OAAD,CAAf;AACD,KAZH;AAaD,GAdD;;AAgBA,QAAMC,YAAY,GAAIlB,CAAD,IAAK;AACxBA,IAAAA,CAAC,CAACmB,cAAF;AACAf,IAAAA,eAAe;AAChB,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAEc,YAApC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,QAAQ,EAAEnB;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,WAAW,EAAC,aAHd;AAIE,UAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBARF,eAcE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,QAHd;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,QAAQ,EAAEA;AALZ;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAnEQT,kB;;KAAAA,kB;AAqET,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\n\n\nconst url = \"http://localhost:8001/transactions\";\nfunction AddTransactionForm({ transactions, setTransactions }) {\n  const [addTransactionForm, setAddTransactionForm] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: 0,\n  });\n\n  // onchange\n  const handleChange = (e) => {\n    let descrip = e.target.descrip;\n    let value = e.target.value;\n    setAddTransactionForm({...addTransactionForm, [descrip]: value });\n  };\n\n  const postTransaction = () => {\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(addTransactionForm),\n    })\n      .then((respon) => respon.json())\n      .then((data) => {\n        console.log(data)\n        const newData = [...transactions, data];\n        setTransactions(newData);\n      });\n  };\n\n  const handleSubmit = (e)=>{\n    e.preventDefault()\n    postTransaction()\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit} >\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" onChange={handleChange} />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            step=\"0.01\"\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"]},"metadata":{},"sourceType":"module"}