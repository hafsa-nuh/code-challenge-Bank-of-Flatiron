{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nconst url = \"http://localhost:8001/transactions\";\n\nfunction AddTransactionForm() {\n  _s();\n\n  //  lets try this form \n  const [date, setDate] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [amount, setAmount] = useState(''); // POST\n\n  const postTransaction = () => {\n    let data = {\n      date,\n      description,\n      category,\n      amount\n    };\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Accept': \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(respon => respon.json()).then(data => {\n      console.warn(data); // console.log(data + \"y isnt console logging\")\n      // const newData = [...transactions, data];\n      // console.log(\"hafsa\"+newData)\n      //  setTransactions(newData);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    postTransaction();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          value: description,\n          placeholder: \"Description\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          value: category,\n          placeholder: \"Category\",\n          onChange: e => setCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          value: amount,\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"1SzQANxGQqrVfX6N4lyFL+v9Muk=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/Users/admin/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useState","url","AddTransactionForm","date","setDate","description","setDescription","category","setCategory","amount","setAmount","postTransaction","data","fetch","method","headers","body","JSON","stringify","then","respon","json","console","warn","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n\nconst url = \"http://localhost:8001/transactions\";\nfunction AddTransactionForm() {\n  //  lets try this form \n  const [date, setDate] = useState('')\n  const [description, setDescription] = useState('')\n  const [category, setCategory] = useState('')\n  const [amount, setAmount] = useState('')\n\n  // POST\n  const postTransaction = () => {\n    let data = {date, description,category,amount}\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Accept': \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify( data),\n    })\n      .then((respon) => respon.json())\n      .then((data) => {\n           console.warn(data)\n        // console.log(data + \"y isnt console logging\")\n      // const newData = [...transactions, data];\n        // console.log(\"hafsa\"+newData)\n      //  setTransactions(newData);\n      });\n  };\n\n  const handleSubmit = (e)=>{\n    e.preventDefault()\n    postTransaction()\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            placeholder=\"Description\"\n            onChange={(e) => setDescription(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            value={category}\n            placeholder=\"Category\"\n            onChange={(e) => setCategory(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            placeholder=\"Amount\"\n            step=\"0.01\"\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}